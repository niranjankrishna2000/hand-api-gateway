// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/campaigns/approve": {
            "patch": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "Admin can Approve Campaign after verifying it",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Campaign"
                ],
                "summary": "Approve Campaigns",
                "parameters": [
                    {
                        "description": "Post ID ",
                        "name": "ApproveCampaignBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.ApproveCampaignBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.ApproveCampaignResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.ApproveCampaignResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.ApproveCampaignResponse"
                        }
                    }
                }
            }
        },
        "/admin/campaigns/details": {
            "get": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "Admin can see Campaign Details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Campaign"
                ],
                "summary": "Campaign Details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID ",
                        "name": "postid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.CampaignDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.CampaignDetailsResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.CampaignDetailsResponse"
                        }
                    }
                }
            }
        },
        "/admin/campaigns/reject": {
            "patch": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "Admin can Reject Campaign",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Campaign"
                ],
                "summary": "Reject Campaign",
                "parameters": [
                    {
                        "description": "Post ID ",
                        "name": "RejectCampaignBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.RejectCampaignBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.RejectCampaignResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.RejectCampaignResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.RejectCampaignResponse"
                        }
                    }
                }
            }
        },
        "/admin/campaigns/reported": {
            "get": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "Admin can see reported posts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Reported"
                ],
                "summary": "Reported posts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "searchkey",
                        "name": "searchkey",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.ReportedListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.ReportedListResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.ReportedListResponse"
                        }
                    }
                }
            }
        },
        "/admin/campaigns/reported/delete": {
            "delete": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "Admin can Delete reported post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Reported"
                ],
                "summary": "Delete reported post",
                "parameters": [
                    {
                        "description": "Post ID ",
                        "name": "DeleteReportBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.DeleteReportBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.DeleteReportResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.DeleteReportResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.DeleteReportResponse"
                        }
                    }
                }
            }
        },
        "/admin/campaigns/reported/details": {
            "get": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "Admin can see details of reported post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Reported"
                ],
                "summary": "Details of reported post",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID ",
                        "name": "postid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.ReportDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.ReportDetailsResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.ReportDetailsResponse"
                        }
                    }
                }
            }
        },
        "/admin/campaigns/requestlist": {
            "get": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "Admin can see campaogn requests",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Campaign"
                ],
                "summary": "Campaign Requests",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "searchkey",
                        "name": "searchkey",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.CampaignRequestListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.CampaignRequestListResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.CampaignRequestListResponse"
                        }
                    }
                }
            }
        },
        "/admin/categories/categorylist": {
            "get": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "Admin can see Categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Categories"
                ],
                "summary": "Categories",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "searchkey",
                        "name": "searchkey",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.CategoryListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.CategoryListResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.CategoryListResponse"
                        }
                    }
                }
            }
        },
        "/admin/categories/categorylist/posts": {
            "get": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "Admin can see Category posts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Categories"
                ],
                "summary": "Admin can see Category posts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Category Id",
                        "name": "categoryId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.CategoryPostsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.CategoryPostsResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.CategoryPostsResponse"
                        }
                    }
                }
            }
        },
        "/admin/categories/delete": {
            "delete": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "Admin can Delete Category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Categories"
                ],
                "summary": "Delete Category",
                "parameters": [
                    {
                        "description": "Category ID ",
                        "name": "DeleteCategoryBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.DeleteCategoryBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.DeleteCategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.DeleteCategoryResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.DeleteCategoryResponse"
                        }
                    }
                }
            }
        },
        "/admin/categories/new": {
            "post": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "Admin can create New Category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Categories"
                ],
                "summary": "Create Category",
                "parameters": [
                    {
                        "description": "Category Name",
                        "name": "NewCategoryBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.NewCategoryBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.NewCategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.NewCategoryResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.NewCategoryResponse"
                        }
                    }
                }
            }
        },
        "/admin/dashboard": {
            "get": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "Admin can see website statistics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Dashboard"
                ],
                "summary": "Admin Dashboard",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.AdminDashboardResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.AdminDashboardResponse"
                        }
                    }
                }
            }
        },
        "/admin/dashboard/User": {
            "get": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "Admin can see User toplist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Dashboard"
                ],
                "summary": "Top Users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.UserStatsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.UserStatsResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.UserStatsResponse"
                        }
                    }
                }
            }
        },
        "/admin/dashboard/category": {
            "get": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "Admin can see top Categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Dashboard"
                ],
                "summary": "Top Categories",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.CategoryStatsResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/dashboard/posts": {
            "get": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "Admin can see Post toplist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Dashboard"
                ],
                "summary": "Top Posts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.PostStatsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.PostStatsResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.PostStatsResponse"
                        }
                    }
                }
            }
        },
        "/admin/feeds": {
            "get": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "Admin can see feeds",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Feeds"
                ],
                "summary": "Feeds",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "searchkey",
                        "name": "searchkey",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.FeedsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.FeedsResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.FeedsResponse"
                        }
                    }
                }
            }
        },
        "/admin/post/delete": {
            "delete": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "Admin can delete post here",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Feeds"
                ],
                "summary": "Delete post",
                "parameters": [
                    {
                        "description": "Post ID ",
                        "name": "DeletePostBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.DeletePostBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.DeletePostResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.DeletePostResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.DeletePostResponse"
                        }
                    }
                }
            }
        },
        "/admin/post/details": {
            "get": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "Admin can get post details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Feeds"
                ],
                "summary": "Post detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID ",
                        "name": "postid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.PostDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.PostDetailsResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.PostDetailsResponse"
                        }
                    }
                }
            }
        },
        "/admin/users/changepermission": {
            "patch": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "Admin can Change User Permission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Users"
                ],
                "summary": "Change User Permission",
                "parameters": [
                    {
                        "description": "User ID ",
                        "name": "ChangeUserPermissionBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.ChangeUserPermissionBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.ChangeUserPermissionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.ChangeUserPermissionResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.ChangeUserPermissionResponse"
                        }
                    }
                }
            }
        },
        "/admin/users/details": {
            "get": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "Admin can get user details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Users"
                ],
                "summary": "User detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID ",
                        "name": "userid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetUserDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.GetUserDetailsResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.GetUserDetailsResponse"
                        }
                    }
                }
            }
        },
        "/admin/users/list": {
            "get": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "Admin can see User List",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Users"
                ],
                "summary": "User List",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "searchkey",
                        "name": "searchkey",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.UserListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.UserListResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.UserListResponse"
                        }
                    }
                }
            }
        },
        "/adminlogin": {
            "post": {
                "description": "Admin can login here",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Auth"
                ],
                "summary": "Admin Login",
                "parameters": [
                    {
                        "description": "Admin Login Data",
                        "name": "AdminLoginRequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.AdminLoginRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.AdminLoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.AdminLoginResponse"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.AdminLoginResponse"
                        }
                    }
                }
            }
        },
        "/forgot-password": {
            "post": {
                "description": "Forgot Password?User can login with otp here",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Auth"
                ],
                "summary": "User Login with otp",
                "parameters": [
                    {
                        "description": "User Login Data",
                        "name": "LoginWithOtpRequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.LoginWithOtpRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.LoginWithOtpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.LoginWithOtpResponse"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.LoginWithOtpResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "User can login here",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Auth"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "User Login Data",
                        "name": "b",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.LoginRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.LoginResponse"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.LoginResponse"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "description": "User can logout here",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Auth"
                ],
                "summary": "User Logout",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/otp-validate": {
            "patch": {
                "description": "User can validate otp here",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Auth"
                ],
                "summary": "User Otp Validation",
                "parameters": [
                    {
                        "description": "Validate otp Data",
                        "name": "b",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.OtpValidateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.LoginResponse"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Adding new user to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Auth"
                ],
                "summary": "signup",
                "parameters": [
                    {
                        "description": "User Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.SignUpRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.SignUpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.SignUpResponse"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.SignUpResponse"
                        }
                    }
                }
            }
        },
        "/user/feeds": {
            "get": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can see feeds\nSelect Type:\nSelect Category:",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Post"
                ],
                "summary": "Feeds",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "searchkey",
                        "name": "searchkey",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "category",
                        "name": "category",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.UserFeedsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.UserFeedsResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.UserFeedsResponse"
                        }
                    }
                }
            }
        },
        "/user/notifications": {
            "get": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can see Notifications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Notifications"
                ],
                "summary": "Notifications",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.NotificationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.NotificationResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.NotificationResponse"
                        }
                    }
                }
            }
        },
        "/user/notifications/clear": {
            "delete": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can Clear Notifications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Notifications"
                ],
                "summary": "Clear Notification",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.ClearNotificationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.ClearNotificationResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.ClearNotificationResponse"
                        }
                    }
                }
            }
        },
        "/user/notifications/delete": {
            "delete": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can delete Notification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Notifications"
                ],
                "summary": "Delete Notification",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Notification Id",
                        "name": "notificationId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.DeleteNotificationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.DeleteNotificationResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.DeleteNotificationResponse"
                        }
                    }
                }
            }
        },
        "/user/notifications/details": {
            "get": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can see Notification Details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Notifications"
                ],
                "summary": "Notification Details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Notification Id",
                        "name": "notificationId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.NotificationDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.NotificationDetailsResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.NotificationDetailsResponse"
                        }
                    }
                }
            }
        },
        "/user/post/comment": {
            "post": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can Comment new post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Post"
                ],
                "summary": "Comment",
                "parameters": [
                    {
                        "description": "Comment post Data",
                        "name": "commentBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.CommentPostRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.CommentPostResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.CommentPostResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.CommentPostResponse"
                        }
                    }
                }
            }
        },
        "/user/post/comment/delete": {
            "delete": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can Delete post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Post"
                ],
                "summary": "Delete a comment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Comment ID",
                        "name": "commentId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.DeleteCommentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.DeleteCommentResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.DeleteCommentResponse"
                        }
                    }
                }
            }
        },
        "/user/post/comment/report": {
            "post": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can Report Comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Post"
                ],
                "summary": "Report Comment",
                "parameters": [
                    {
                        "description": "Report Comment Data",
                        "name": "reportCommentBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.ReportCommentRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.ReportCommentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.ReportCommentResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.ReportCommentResponse"
                        }
                    }
                }
            }
        },
        "/user/post/delete": {
            "delete": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "Delete An expired post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Post"
                ],
                "summary": "Delete Post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post Id",
                        "name": "postid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/pb.UserDeletePostResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.UserDeletePostResponse"
                        }
                    }
                }
            }
        },
        "/user/post/details": {
            "get": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can get post detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Post"
                ],
                "summary": "Post detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.UserPostDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.UserPostDetailsResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.UserPostDetailsResponse"
                        }
                    }
                }
            }
        },
        "/user/post/details/report": {
            "post": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can Report post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Post"
                ],
                "summary": "Report post",
                "parameters": [
                    {
                        "description": "Report Post Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.ReportPostRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.ReportPostResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.ReportPostResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.ReportPostResponse"
                        }
                    }
                }
            }
        },
        "/user/post/donate/": {
            "post": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can donate for campaigns",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Donations"
                ],
                "summary": "Donate",
                "parameters": [
                    {
                        "description": "Donation Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.DonateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.DonateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.DonateResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.DonateResponse"
                        }
                    }
                }
            }
        },
        "/user/post/donate/download-invoice": {
            "get": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "Download the invoice PDF file",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "User Invoice"
                ],
                "summary": "Download Invoice",
                "parameters": [
                    {
                        "type": "string",
                        "description": "invoice id",
                        "name": "invoiceID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Couldn't fetch data from client ",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Error in internal server",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/post/donate/generate-invoice": {
            "post": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "generate the invoice PDF file",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "User Invoice"
                ],
                "summary": "generate Invoice PDF",
                "parameters": [
                    {
                        "type": "string",
                        "description": "invoice id",
                        "name": "invoiceID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully Generated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid Post ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Error in internal server",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/post/donate/history": {
            "get": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can see Donation History",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Donations"
                ],
                "summary": "Donation History",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "searchkey",
                        "name": "searchkey",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.DonationHistoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.DonationHistoryResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.DonationHistoryResponse"
                        }
                    }
                }
            }
        },
        "/user/post/donate/razorpay": {
            "get": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can pay for donation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Donations"
                ],
                "summary": "Donate",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "pay id Data",
                        "name": "payid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.MakePaymentRazorPayResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.MakePaymentRazorPayResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.MakePaymentRazorPayResponse"
                        }
                    }
                }
            }
        },
        "/user/post/edit": {
            "patch": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can edit post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Post"
                ],
                "summary": "Edit post",
                "parameters": [
                    {
                        "description": "Edit post Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.EditPostRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.EditPostResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.EditPostResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.EditPostResponse"
                        }
                    }
                }
            }
        },
        "/user/post/expire": {
            "patch": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "Expire an active post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Post"
                ],
                "summary": "Expire Post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post Id",
                        "name": "postid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.ExpirePostRequest"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.ExpirePostRequest"
                        }
                    }
                }
            }
        },
        "/user/post/like": {
            "post": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can Like post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Post"
                ],
                "summary": "User can Like a post",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "postid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.LikePostResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.LikePostResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.LikePostResponse"
                        }
                    }
                }
            }
        },
        "/user/post/new": {
            "get": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "Choose A category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Post"
                ],
                "summary": "Create Post",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetCreatePostResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.GetCreatePostResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can create new post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Post"
                ],
                "summary": "Create Post",
                "parameters": [
                    {
                        "description": "Create post Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.CreatePostRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.CreatePostResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.CreatePostResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.CreatePostResponse"
                        }
                    }
                }
            }
        },
        "/user/post/updates": {
            "get": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can see updates about a campaign",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Post"
                ],
                "summary": "Post Updates",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "postId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetUpdatesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.GetUpdatesResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.GetUpdatesResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can add an updates about a campaign",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Post"
                ],
                "summary": "Add Update",
                "parameters": [
                    {
                        "description": "Update Data",
                        "name": "updateBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.UpdateBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.AddUpdatesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.AddUpdatesResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.AddUpdatesResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can delete an updates about a campaign",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Post"
                ],
                "summary": "Delete Update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Update ID",
                        "name": "updateId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.DeleteUpdatesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.DeleteUpdatesResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.DeleteUpdatesResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can edit an updates about a campaign",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Post"
                ],
                "summary": "Edit Update",
                "parameters": [
                    {
                        "description": "Update Data",
                        "name": "editUpdateBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.EditUpdateBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.EditUpdatesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.EditUpdatesResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.EditUpdatesResponse"
                        }
                    }
                }
            }
        },
        "/user/post/upload-image": {
            "post": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can upload image",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Upload Image"
                ],
                "summary": "Upload image",
                "parameters": [
                    {
                        "type": "file",
                        "description": "image",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "failed to upload image",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Error in internal server",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/profile/details": {
            "get": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can see Profile Details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Profile"
                ],
                "summary": "Profile Details",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.ProfileDetailsRequest"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.ProfileDetailsRequest"
                        }
                    }
                }
            }
        },
        "/user/profile/edit": {
            "patch": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can edit profile\nChoose Gender : male,female and others\nDate of Birth Format : 2006-01-02 00:00:00",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Profile"
                ],
                "summary": "Edit profile",
                "parameters": [
                    {
                        "description": "Edit profile Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.EditProfileRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.EditProfileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.EditProfileResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.EditProfileResponse"
                        }
                    }
                }
            }
        },
        "/user/profile/monthly-goal": {
            "get": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can see MonthlyGoal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Profile"
                ],
                "summary": "User MonthlyGoal",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetMonthlyGoalResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.GetMonthlyGoalResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can edit an MonthlyGoal\ncategory: 1. medical,2. child care,3. animal care, 4. Education,5. Memorial",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Profile"
                ],
                "summary": "Edit MonthlyGoal",
                "parameters": [
                    {
                        "description": "MonthlyGoal Data",
                        "name": "monthlyGoalBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.MonthlyGoalBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.EditMonthlyGoalResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.EditMonthlyGoalResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.EditMonthlyGoalResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can add MonthlyGoal\ncategory: 1. medical,2. child care,3. animal care, 4. Education,5. Memorial",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Profile"
                ],
                "summary": "Add MonthlyGoal",
                "parameters": [
                    {
                        "description": "Monthly Goal Data",
                        "name": "monthlyGoalBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.MonthlyGoalBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.AddMonthlyGoalResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.AddMonthlyGoalResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.AddMonthlyGoalResponse"
                        }
                    }
                }
            }
        },
        "/user/profile/my-campaigns": {
            "get": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can see their campaigns",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Profile"
                ],
                "summary": "My Campaigns",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "searchkey",
                        "name": "searchkey",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetMyCampaignsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.GetMyCampaignsResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.GetMyCampaignsResponse"
                        }
                    }
                }
            }
        },
        "/user/profile/my-impact": {
            "get": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can see their impact on society",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Profile"
                ],
                "summary": "My Impact",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetmyImpactResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.GetmyImpactResponse"
                        }
                    }
                }
            }
        },
        "/user/success-stories": {
            "get": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can see Success Stories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Success Story"
                ],
                "summary": "Success Story",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "searchkey",
                        "name": "searchkey",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetSuccessStoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.GetSuccessStoryResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.GetSuccessStoryResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can create Success Stories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Success Story"
                ],
                "summary": "Create Success Story",
                "parameters": [
                    {
                        "description": "Success Story Data",
                        "name": "succesStoryBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.SuccesStoryBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.AddSuccessStoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.AddSuccessStoryResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.AddSuccessStoryResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can Delete Success Stories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Success Story"
                ],
                "summary": "Success Story",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Success Story ID",
                        "name": "storyId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.DeleteSuccessStoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.DeleteSuccessStoryResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.DeleteSuccessStoryResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "description": "User can edit Success Stories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Success Story"
                ],
                "summary": "Edit Success Story",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "postId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Story Data",
                        "name": "successStory",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.EditSuccesStoryBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.EditSuccessStoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.EditSuccessStoryResponse"
                        }
                    },
                    "403": {
                        "description": "You have not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/pb.EditSuccessStoryResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "pb.AddMonthlyGoalResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "category": {
                    "type": "integer"
                },
                "day": {
                    "type": "integer"
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.AddSuccessStoryResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "successStory": {
                    "$ref": "#/definitions/pb.SuccesStory"
                }
            }
        },
        "pb.AddUpdatesResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "updates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.Update"
                    }
                }
            }
        },
        "pb.AdminDashboardResponse": {
            "type": "object",
            "properties": {
                "alltime": {
                    "$ref": "#/definitions/pb.Stats"
                },
                "annual": {
                    "$ref": "#/definitions/pb.Stats"
                },
                "daily": {
                    "$ref": "#/definitions/pb.Stats"
                },
                "monthly": {
                    "$ref": "#/definitions/pb.Stats"
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "weekly": {
                    "$ref": "#/definitions/pb.Stats"
                }
            }
        },
        "pb.AdminLoginResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "pb.ApproveCampaignResponse": {
            "type": "object",
            "properties": {
                "post": {
                    "$ref": "#/definitions/pkg_admin_pb.Post"
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.CampaignDetailsResponse": {
            "type": "object",
            "properties": {
                "post": {
                    "$ref": "#/definitions/pkg_admin_pb.Post"
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.CampaignRequestListResponse": {
            "type": "object",
            "properties": {
                "post": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkg_admin_pb.Post"
                    }
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.CategoryListResponse": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkg_admin_pb.Category"
                    }
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.CategoryPostsResponse": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/definitions/pkg_admin_pb.Category"
                },
                "posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkg_admin_pb.Post"
                    }
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.CategoryStatsResponse": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkg_admin_pb.Category"
                    }
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.ChangeUserPermissionResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/pkg_auth_pb.User"
                }
            }
        },
        "pb.ClearNotificationResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.Comment": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "postid": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                },
                "userid": {
                    "type": "integer"
                }
            }
        },
        "pb.CommentPostResponse": {
            "type": "object",
            "properties": {
                "Post": {
                    "$ref": "#/definitions/pb.PostDetails"
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.CreatePostResponse": {
            "type": "object",
            "properties": {
                "post": {
                    "$ref": "#/definitions/pkg_user_pb.Post"
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.DeleteCategoryResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.DeleteCommentResponse": {
            "type": "object",
            "properties": {
                "Post": {
                    "$ref": "#/definitions/pb.PostDetails"
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.DeleteNotificationResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.DeletePostResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.DeleteReportResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.DeleteSuccessStoryResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "successStories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.SuccesStory"
                    }
                }
            }
        },
        "pb.DeleteUpdatesResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "updates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.Update"
                    }
                }
            }
        },
        "pb.DonateResponse": {
            "type": "object",
            "properties": {
                "Post": {
                    "$ref": "#/definitions/pkg_user_pb.Post"
                },
                "link": {
                    "type": "string"
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.Donation": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "paymentid": {
                    "type": "string"
                },
                "post": {
                    "$ref": "#/definitions/pkg_user_pb.Post"
                }
            }
        },
        "pb.DonationHistoryResponse": {
            "type": "object",
            "properties": {
                "donations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.Donation"
                    }
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.EditMonthlyGoalResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "category": {
                    "type": "integer"
                },
                "day": {
                    "type": "integer"
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.EditPostResponse": {
            "type": "object",
            "properties": {
                "post": {
                    "$ref": "#/definitions/pkg_user_pb.Post"
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.EditProfileResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/pb.UserProfile"
                }
            }
        },
        "pb.EditSuccessStoryResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "successStory": {
                    "$ref": "#/definitions/pb.SuccesStory"
                }
            }
        },
        "pb.EditUpdatesResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "updates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.Update"
                    }
                }
            }
        },
        "pb.ExpirePostRequest": {
            "type": "object",
            "properties": {
                "postid": {
                    "type": "integer"
                },
                "userid": {
                    "type": "integer"
                }
            }
        },
        "pb.FeedsResponse": {
            "type": "object",
            "properties": {
                "Posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkg_admin_pb.Post"
                    }
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.GetCreatePostResponse": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkg_user_pb.Category"
                    }
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.GetMonthlyGoalResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "day": {
                    "type": "integer"
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.GetMyCampaignsResponse": {
            "type": "object",
            "properties": {
                "Posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkg_user_pb.Post"
                    }
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.GetSuccessStoryResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "successStories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.SuccesStory"
                    }
                }
            }
        },
        "pb.GetUpdatesResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "updates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.Update"
                    }
                }
            }
        },
        "pb.GetUserDetailsResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/pkg_auth_pb.User"
                }
            }
        },
        "pb.GetmyImpactResponse": {
            "type": "object",
            "properties": {
                "collected": {
                    "type": "integer"
                },
                "donated": {
                    "type": "integer"
                },
                "lifesChanged": {
                    "type": "integer"
                },
                "likes": {
                    "type": "integer"
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "views": {
                    "type": "integer"
                }
            }
        },
        "pb.LikePostResponse": {
            "type": "object",
            "properties": {
                "Post": {
                    "$ref": "#/definitions/pb.PostDetails"
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.LoginResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/pkg_auth_pb.User"
                }
            }
        },
        "pb.LoginWithOtpResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.MakePaymentRazorPayResponse": {
            "type": "object",
            "properties": {
                "FinalPrice": {
                    "type": "integer"
                },
                "PaymentID": {
                    "type": "integer"
                },
                "Razor_id": {
                    "type": "string"
                },
                "UserID": {
                    "type": "integer"
                },
                "Username": {
                    "type": "string"
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.NewCategoryResponse": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/definitions/pkg_admin_pb.Category"
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.Notification": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "post": {
                    "$ref": "#/definitions/pb.PostDetails"
                },
                "text": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "userid": {
                    "type": "integer"
                }
            }
        },
        "pb.NotificationDetailsResponse": {
            "type": "object",
            "properties": {
                "notification": {
                    "$ref": "#/definitions/pb.Notification"
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.NotificationResponse": {
            "type": "object",
            "properties": {
                "notifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.Notification"
                    }
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.PostDetails": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.Comment"
                    }
                },
                "donations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.Donation"
                    }
                },
                "post": {
                    "$ref": "#/definitions/pkg_user_pb.Post"
                },
                "updates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.Update"
                    }
                }
            }
        },
        "pb.PostDetailsResponse": {
            "type": "object",
            "properties": {
                "Post": {
                    "$ref": "#/definitions/pkg_admin_pb.Post"
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.PostStatsResponse": {
            "type": "object",
            "properties": {
                "posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkg_admin_pb.Post"
                    }
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.ProfileDetailsRequest": {
            "type": "object",
            "properties": {
                "userid": {
                    "type": "integer"
                }
            }
        },
        "pb.RejectCampaignResponse": {
            "type": "object",
            "properties": {
                "post": {
                    "$ref": "#/definitions/pkg_admin_pb.Post"
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.ReportCommentResponse": {
            "type": "object",
            "properties": {
                "Post": {
                    "$ref": "#/definitions/pb.PostDetails"
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.ReportDetailsResponse": {
            "type": "object",
            "properties": {
                "post": {
                    "$ref": "#/definitions/pb.ReportedPost"
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.ReportPostResponse": {
            "type": "object",
            "properties": {
                "Post": {
                    "$ref": "#/definitions/pkg_user_pb.Post"
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.ReportedListResponse": {
            "type": "object",
            "properties": {
                "post": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.ReportedPost"
                    }
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.ReportedPost": {
            "type": "object",
            "properties": {
                "post": {
                    "$ref": "#/definitions/pkg_admin_pb.Post"
                },
                "reason": {
                    "type": "string"
                }
            }
        },
        "pb.SignUpResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/pkg_auth_pb.User"
                }
            }
        },
        "pb.Stats": {
            "type": "object",
            "properties": {
                "activecampaigns": {
                    "type": "integer"
                },
                "collectedmoney": {
                    "type": "integer"
                },
                "likes": {
                    "type": "integer"
                },
                "posts": {
                    "type": "integer"
                },
                "users": {
                    "type": "integer"
                }
            }
        },
        "pb.SuccesStory": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "place": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "pb.Update": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "postid": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "pb.UserDeletePostResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.UserFeedsResponse": {
            "type": "object",
            "properties": {
                "Categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkg_user_pb.Category"
                    }
                },
                "Posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkg_user_pb.Post"
                    }
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "successstories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.SuccesStory"
                    }
                }
            }
        },
        "pb.UserListResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "user": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkg_auth_pb.User"
                    }
                }
            }
        },
        "pb.UserPostDetailsResponse": {
            "type": "object",
            "properties": {
                "Post": {
                    "$ref": "#/definitions/pb.PostDetails"
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.UserProfile": {
            "type": "object",
            "properties": {
                "Address": {
                    "type": "string"
                },
                "DoB": {
                    "type": "string"
                },
                "Gender": {
                    "type": "string"
                },
                "PAN": {
                    "type": "string"
                },
                "ProfilePicture": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "pb.UserStatsResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkg_admin_pb.User"
                    }
                }
            }
        },
        "pkg_admin_pb.Category": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "categoryid": {
                    "type": "integer"
                }
            }
        },
        "pkg_admin_pb.Post": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "collected": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "place": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "userid": {
                    "type": "integer"
                }
            }
        },
        "pkg_admin_pb.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "pkg_auth_pb.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "pkg_user_pb.Category": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "pkg_user_pb.Post": {
            "type": "object",
            "properties": {
                "account_no": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer"
                },
                "categoryid": {
                    "type": "integer"
                },
                "collected": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "likes": {
                    "type": "integer"
                },
                "place": {
                    "type": "string"
                },
                "proof": {
                    "type": "string"
                },
                "taxbenefit": {
                    "type": "boolean"
                },
                "text": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "routes.AdminLoginRequestBody": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "routes.ApproveCampaignBody": {
            "type": "object",
            "required": [
                "postId"
            ],
            "properties": {
                "postId": {
                    "type": "integer",
                    "maximum": 999,
                    "minimum": 1
                }
            }
        },
        "routes.ChangeUserPermissionBody": {
            "type": "object",
            "required": [
                "userId"
            ],
            "properties": {
                "userId": {
                    "type": "integer",
                    "maximum": 999,
                    "minimum": 1
                }
            }
        },
        "routes.CommentPostRequestBody": {
            "type": "object",
            "required": [
                "postid",
                "text"
            ],
            "properties": {
                "postid": {
                    "type": "integer",
                    "maximum": 999,
                    "minimum": 1
                },
                "text": {
                    "description": "test",
                    "type": "string"
                }
            }
        },
        "routes.CreatePostRequestBody": {
            "type": "object",
            "required": [
                "address",
                "categoryId",
                "date",
                "place",
                "taxbenefit",
                "text",
                "title"
            ],
            "properties": {
                "accno": {
                    "type": "string",
                    "maxLength": 17,
                    "minLength": 9
                },
                "address": {
                    "type": "string",
                    "maxLength": 50
                },
                "amount": {
                    "type": "integer",
                    "minimum": 100
                },
                "categoryId": {
                    "type": "integer",
                    "maximum": 10,
                    "minimum": 1
                },
                "date": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "place": {
                    "type": "string",
                    "maxLength": 10
                },
                "taxbenefit": {
                    "type": "boolean"
                },
                "text": {
                    "type": "string",
                    "maxLength": 50
                },
                "title": {
                    "type": "string",
                    "maxLength": 20
                }
            }
        },
        "routes.DeleteCategoryBody": {
            "type": "object",
            "required": [
                "categoryId"
            ],
            "properties": {
                "categoryId": {
                    "type": "integer",
                    "maximum": 99,
                    "minimum": 1
                }
            }
        },
        "routes.DeletePostBody": {
            "type": "object",
            "required": [
                "postId"
            ],
            "properties": {
                "postId": {
                    "type": "integer",
                    "maximum": 999,
                    "minimum": 1
                }
            }
        },
        "routes.DeleteReportBody": {
            "type": "object",
            "required": [
                "postId"
            ],
            "properties": {
                "postId": {
                    "type": "integer",
                    "maximum": 999,
                    "minimum": 1
                }
            }
        },
        "routes.DonateRequestBody": {
            "type": "object",
            "required": [
                "postID"
            ],
            "properties": {
                "amount": {
                    "type": "integer",
                    "minimum": 100
                },
                "postID": {
                    "type": "integer",
                    "maximum": 999,
                    "minimum": 1
                }
            }
        },
        "routes.EditPostRequestBody": {
            "type": "object",
            "required": [
                "address",
                "date",
                "place",
                "postid",
                "text"
            ],
            "properties": {
                "accno": {
                    "type": "string",
                    "maxLength": 17,
                    "minLength": 9
                },
                "address": {
                    "type": "string",
                    "maxLength": 50
                },
                "amount": {
                    "type": "integer",
                    "minimum": 100
                },
                "date": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "place": {
                    "type": "string",
                    "maxLength": 10
                },
                "postid": {
                    "type": "integer",
                    "maximum": 999,
                    "minimum": 1
                },
                "text": {
                    "description": "test",
                    "type": "string",
                    "maxLength": 50
                }
            }
        },
        "routes.EditProfileRequestBody": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "maxLength": 50
                },
                "dob": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "male",
                        "female",
                        "others"
                    ]
                },
                "name": {
                    "description": "test",
                    "type": "string"
                },
                "pan": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "profilepic": {
                    "type": "string"
                }
            }
        },
        "routes.EditSuccesStoryBody": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                },
                "place": {
                    "type": "string",
                    "maxLength": 10
                },
                "text": {
                    "type": "string",
                    "maxLength": 50
                },
                "title": {
                    "type": "string",
                    "maxLength": 15
                }
            }
        },
        "routes.EditUpdateBody": {
            "type": "object",
            "required": [
                "Id"
            ],
            "properties": {
                "Id": {
                    "type": "integer",
                    "maximum": 999,
                    "minimum": 1
                },
                "text": {
                    "description": "test",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "title": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 1
                }
            }
        },
        "routes.LoginRequestBody": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "routes.LoginWithOtpRequestBody": {
            "type": "object",
            "required": [
                "phone"
            ],
            "properties": {
                "phone": {
                    "type": "string"
                }
            }
        },
        "routes.MonthlyGoalBody": {
            "type": "object",
            "required": [
                "amount",
                "category",
                "day"
            ],
            "properties": {
                "amount": {
                    "type": "integer",
                    "maximum": 10000,
                    "minimum": 100
                },
                "category": {
                    "description": "note add",
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 1
                },
                "day": {
                    "type": "integer",
                    "maximum": 28,
                    "minimum": 1
                }
            }
        },
        "routes.NewCategoryBody": {
            "type": "object",
            "required": [
                "category"
            ],
            "properties": {
                "category": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 2
                }
            }
        },
        "routes.OtpValidateRequestBody": {
            "type": "object",
            "required": [
                "confirm",
                "otp",
                "password",
                "phone"
            ],
            "properties": {
                "confirm": {
                    "type": "string"
                },
                "otp": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "routes.RejectCampaignBody": {
            "type": "object",
            "required": [
                "postId"
            ],
            "properties": {
                "postId": {
                    "type": "integer",
                    "maximum": 999,
                    "minimum": 1
                }
            }
        },
        "routes.ReportCommentRequestBody": {
            "type": "object",
            "required": [
                "commentId",
                "text"
            ],
            "properties": {
                "commentId": {
                    "type": "integer",
                    "maximum": 999,
                    "minimum": 1
                },
                "text": {
                    "type": "string",
                    "maxLength": 20
                }
            }
        },
        "routes.ReportPostRequestBody": {
            "type": "object",
            "properties": {
                "postId": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "routes.SignUpRequestBody": {
            "type": "object",
            "required": [
                "confirmpassword",
                "email",
                "name",
                "password",
                "phone"
            ],
            "properties": {
                "confirmpassword": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "description": "check what is alphaunicode",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3
                },
                "password": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 6
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "routes.SuccesStoryBody": {
            "type": "object",
            "required": [
                "place",
                "text",
                "title"
            ],
            "properties": {
                "image": {
                    "type": "string"
                },
                "place": {
                    "type": "string",
                    "maxLength": 10
                },
                "text": {
                    "type": "string",
                    "maxLength": 50
                },
                "title": {
                    "type": "string",
                    "maxLength": 15
                }
            }
        },
        "routes.UpdateBody": {
            "type": "object",
            "required": [
                "Id",
                "text",
                "title"
            ],
            "properties": {
                "Id": {
                    "type": "integer",
                    "maximum": 999,
                    "minimum": 1
                },
                "text": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "title": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 1
                }
            }
        }
    },
        "securityDefinitions": {
            "api_key": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header"
            }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
